// "https://choosealicense.com/licenses/mit/"
// const crypto = require("node:crypto")
// console.log(crypto.randomBytes(48).toString("base64url"))
// "cross-env NODE_ENV=test nyc --reporter=html mocha ./test/main.js --testTimeout=10000 --exit"

const str =
  '"SELECT "Orders"."id", "Orders"."providerId", "Orders"."cost", "Orders"."tax", "Orders"."shipment", "Orders"."expectedAt", "Orders"."actualAt", "Orders"."createdAt", "Orders"."updatedAt", "provider"."id" AS "provider.id", "provider"."name" AS "provider.name", "provider"."address" AS "provider.address", "provider"."phoneNumber" AS "provider.phoneNumber", "provider"."email" AS "provider.email", "provider"."createdAt" AS "provider.createdAt", "provider"."updatedAt" AS "provider.updatedAt", "waresBought"."id" AS "waresBought.id", "waresBought"."wareId" AS "waresBought.wareId", "waresBought"."orderId" AS "waresBought.orderId", "waresBought"."unitPrice" AS "waresBought.unitPrice", "waresBought"."amount" AS "waresBought.amount", "waresBought"."returned" AS "waresBought.returned", "waresBought"."createdAt" AS "waresBought.createdAt", "waresBought"."updatedAt" AS "waresBought.updatedAt", "waresBought->ware"."id" AS "waresBought.ware.id", "waresBought->ware"."name" AS "waresBought.ware.name", "waresBought->ware"."type" AS "waresBought.ware.type", "waresBought->ware"."tags" AS "waresBought.ware.tags", "waresBought->ware"."unitPrice" AS "waresBought.ware.unitPrice", "waresBought->ware"."createdAt" AS "waresBought.ware.createdAt", "waresBought->ware"."updatedAt" AS "waresBought.ware.updatedAt", (SELECT "amount" - "returned" + COALESCE("sold"."returned"  - "sold"."amount", 0) FROM "OrdersWares" LEFT OUTER JOIN "Orders" ON "OrdersWares"."orderId" = "Orders"."id" WHERE "wareId" = "ware"."id" AND "Orders"."actualAt" IS NOT NULL) AS "waresBought.ware.stock", "waresBought->ware->sold"."wareId" AS "waresBought.ware.sold.wareId", "waresBought->ware->sold"."ticketId" AS "waresBought.ware.sold.ticketId", "waresBought->ware->sold"."amount" AS "waresBought.ware.sold.amount", "waresBought->ware->sold"."returned" AS "waresBought.ware.sold.returned", "waresBought->ware->sold"."createdAt" AS "waresBought.ware.sold.createdAt", "waresBought->ware->sold"."updatedAt" AS "waresBought.ware.sold.updatedAt" FROM "Orders" AS "Orders" LEFT OUTER JOIN "Providers" AS "provider" ON "Orders"."providerId" = "provider"."id" LEFT OUTER JOIN "OrdersWares" AS "waresBought" ON "Orders"."id" = "waresBought"."orderId" LEFT OUTER JOIN "Wares" AS "waresBought->ware" ON "waresBought"."wareId" = "waresBought->ware"."id" LEFT OUTER JOIN "WaresTickets" AS "waresBought->ware->sold" ON "waresBought->ware"."id" = "waresBought->ware->sold"."wareId" WHERE "Orders"."id" = \'1\' ORDER BY "Orders"."id" DESC;'

console.log(str.slice(1340))
