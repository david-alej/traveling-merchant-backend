// "https://choosealicense.com/licenses/mit/"
// const crypto = require("node:crypto")
// console.log(crypto.randomBytes(48).toString("base64url"))
// "cross-env NODE_ENV=test nyc --reporter=html mocha ./test/main.js --testTimeout=10000 --exit"

const str =
  'SELECT "Wares".*, "ordersWares"."id" AS "ordersWares.id", "ordersWares"."wareId" AS "ordersWares.wareId", "ordersWares"."orderId" AS "ordersWares.orderId", "ordersWares"."unitPrice" AS "ordersWares.unitPrice", "ordersWares"."amount" AS "ordersWares.amount", "ordersWares"."returned" AS "ordersWares.returned", "ordersWares"."createdAt" AS "ordersWares.createdAt", "ordersWares"."updatedAt" AS "ordersWares.updatedAt", "waresTickets"."wareId" AS "waresTickets.wareId", "waresTickets"."ticketId" AS "waresTickets.ticketId", "waresTickets"."amount" AS "waresTickets.amount", "waresTickets"."returned" AS "waresTickets.returned", "waresTickets"."createdAt" AS "waresTickets.createdAt", "waresTickets"."updatedAt" AS "waresTickets.updatedAt" FROM (SELECT "Wares"."id", "Wares"."name", "Wares"."type", "Wares"."tags", "Wares"."unitPrice", "Wares"."createdAt", "Wares"."updatedAt", (SELECT "amount" - "returned" + COALESCE("waresTickets"."returned"  - "waresTickets"."amount", 0) FROM "OrdersWares" LEFT OUTER JOIN "Orders" ON "OrdersWares"."orderId" = "Orders"."id" WHERE "wareId" = "Wares"."id" AND "Orders"."actualAt" IS NOT NULL) AS "stock" FROM "Wares" AS "Wares" WHERE "Wares"."name" ILIKE \'%versace%\' ORDER BY "Wares"."id" DESC LIMIT 1000) AS "Wares" LEFT OUTER JOIN "OrdersWares" AS "ordersWares" ON "Wares"."id" = "ordersWares"."wareId" LEFT OUTER JOIN "WaresTickets" AS "waresTickets" ON "Wares"."id" = "waresTickets"."wareId" ORDER BY "Wares"."id" DESC, "ordersWares"."orderId" DESC, "ordersWares"."wareId" DESC, "waresTickets"."ticketId" DESC, "waresTickets"."wareId" DESC;"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":124,"line":"3603","name":"error","position":"917","routine":"errorMissingRTE","severity":"ERROR","sql":"SELECT "Wares".*, "ordersWares"."id" AS "ordersWares.id", "ordersWares"."wareId" AS "ordersWares.wareId", "ordersWares"."orderId" AS "ordersWares.orderId", "ordersWares"."unitPrice" AS "ordersWares.unitPrice", "ordersWares"."amount" AS "ordersWares.amount", "ordersWares"."returned" AS "ordersWares.returned", "ordersWares"."createdAt" AS "ordersWares.createdAt", "ordersWares"."updatedAt" AS "ordersWares.updatedAt", "waresTickets"."wareId" AS "waresTickets.wareId", "waresTickets"."ticketId" AS "waresTickets.ticketId", "waresTickets"."amount" AS "waresTickets.amount", "waresTickets"."returned" AS "waresTickets.returned", "waresTickets"."createdAt" AS "waresTickets.createdAt", "waresTickets"."updatedAt" AS "waresTickets.updatedAt" FROM (SELECT "Wares"."id", "Wares"."name", "Wares"."type", "Wares"."tags", "Wares"."unitPrice", "Wares"."createdAt", "Wares"."updatedAt", (SELECT "amount" - "returned" + COALESCE("waresTickets"."returned"  - "waresTickets"."amount", 0) FROM "OrdersWares" LEFT OUTER JOIN "Orders" ON "OrdersWares"."orderId" = "Orders"."id" WHERE "wareId" = "Wares"."id" AND "Orders"."actualAt" IS NOT NULL) AS "stock" FROM "Wares" AS "Wares" WHERE "Wares"."name" ILIKE \'%versace%\' ORDER BY "Wares"."id" DESC LIMIT 1000) AS "Wares" LEFT OUTER JOIN "OrdersWares" AS "ordersWares" ON "Wares"."id" = "ordersWares"."wareId" LEFT OUTER JOIN "WaresTickets" AS "waresTickets" ON "Wares"."id" = "waresTickets"."wareId" ORDER BY "Wares"."id" DESC, "ordersWares"."orderId" DESC, "ordersWares"."wareId" DESC, "waresTickets"."ticketId" DESC, "waresTickets"."wareId" DESC;"},"sql":"SELECT "Wares".*, "ordersWares"."id" AS "ordersWares.id", "ordersWares"."wareId" AS "ordersWares.wareId", "ordersWares"."orderId" AS "ordersWares.orderId", "ordersWares"."unitPrice" AS "ordersWares.unitPrice", "ordersWares"."amount" AS "ordersWares.amount", "ordersWares"."returned" AS "ordersWares.returned", "ordersWares"."createdAt" AS "ordersWares.createdAt", "ordersWares"."updatedAt" AS "ordersWares.updatedAt", "waresTickets"."wareId" AS "waresTickets.wareId", "waresTickets"."ticketId" AS "waresTickets.ticketId", "waresTickets"."amount" AS "waresTickets.amount", "waresTickets"."returned" AS "waresTickets.returned", "waresTickets"."createdAt" AS "waresTickets.createdAt", "waresTickets"."updatedAt" AS "waresTickets.updatedAt" FROM (SELECT "Wares"."id", "Wares"."name", "Wares"."type", "Wares"."tags", "Wares"."unitPrice", "Wares"."createdAt", "Wares"."updatedAt", (SELECT "amount" - "returned" + COALESCE("waresTickets"."returned"  - "waresTickets"."amount", 0) FROM "OrdersWares" LEFT OUTER JOIN "Orders" ON "OrdersWares"."orderId" = "Orders"."id" WHERE "wareId" = "Wares"."id" AND "Orders"."actualAt" IS NOT NULL) AS "stock" FROM "Wares" AS "Wares" WHERE "Wares"."name" ILIKE \'%versace%\' ORDER BY "Wares"."id" DESC LIMIT 1000) AS "Wares" LEFT OUTER JOIN "OrdersWares" AS "ordersWares" ON "Wares"."id" = "ordersWares"."wareId" LEFT OUTER JOIN "WaresTickets" AS "waresTickets" ON "Wares"."id" = "waresTickets"."wareId" ORDER BY "Wares"."id" DESC, "ordersWares"."orderId" DESC, "ordersWares"."wareId" DESC, "waresTickets"."ticketId" DESC, "waresTickets"."wareId" DESC'

console.log(str.slice(917))
