// "https://choosealicense.com/licenses/mit/"
// const crypto = require("node:crypto")
// console.log(crypto.randomBytes(48).toString("base64url"))
// "cross-env NODE_ENV=test nyc --reporter=html mocha ./test/main.js --testTimeout=10000 --exit"

const str =
  '"SELECT "Transactions"."id", "Transactions"."ticketId", "Transactions"."orderId", "Transactions"."payment", "Transactions"."paymentType", "Transactions"."paidAt", "Transactions"."createdAt", "Transactions"."updatedAt", "ticket"."id" AS "ticket.id", "ticket"."clientId" AS "ticket.clientId", "ticket"."cost" AS "ticket.cost", "ticket"."paymentPlan" AS "ticket.paymentPlan", "ticket"."description" AS "ticket.description", "ticket"."createdAt" AS "ticket.createdAt", "ticket"."updatedAt" AS "ticket.updatedAt", (SELECT COALESCE(SUM("payment"), 0) FROM "Transactions" WHERE "ticketId" = "ticket"."id") AS "ticket.paid", (\n          SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" \n          ) AS "ticket.returned", ( SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" ) AS "ticket.returned", "order"."id" AS "order.id", "order"."providerId" AS "order.providerId", "order"."cost" AS "order.cost", "order"."tax" AS "order.tax", "order"."shipment" AS "order.shipment", "order"."expectedAt" AS "order.expectedAt", "order"."actualAt" AS "order.actualAt", "order"."createdAt" AS "order.createdAt", "order"."updatedAt" AS "order.updatedAt" FROM "Transactions" AS "Transactions" LEFT OUTER JOIN "Tickets" AS "ticket" ON "Transactions"."ticketId" = "ticket"."id" LEFT OUTER JOIN "Orders" AS "order" ON "Transactions"."orderId" = "order"."id" ORDER BY "Transactions"."id" DESC, "ticket->waresSold"."ticketId" DESC, "ticket->waresSold"."wareId" DESC;"},"parameters":{},"parent":{"code":"42P01","file":"parse_relation.c","length":130,"line":"3603","name":"error","position":"1742","routine":"errorMissingRTE","severity":"ERROR","sql":"SELECT "Transactions"."id", "Transactions"."ticketId", "Transactions"."orderId", "Transactions"."payment", "Transactions"."paymentType", "Transactions"."paidAt", "Transactions"."createdAt", "Transactions"."updatedAt", "ticket"."id" AS "ticket.id", "ticket"."clientId" AS "ticket.clientId", "ticket"."cost" AS "ticket.cost", "ticket"."paymentPlan" AS "ticket.paymentPlan", "ticket"."description" AS "ticket.description", "ticket"."createdAt" AS "ticket.createdAt", "ticket"."updatedAt" AS "ticket.updatedAt", (SELECT COALESCE(SUM("payment"), 0) FROM "Transactions" WHERE "ticketId" = "ticket"."id") AS "ticket.paid", (\n          SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" \n          ) AS "ticket.returned", ( SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" ) AS "ticket.returned", "order"."id" AS "order.id", "order"."providerId" AS "order.providerId", "order"."cost" AS "order.cost", "order"."tax" AS "order.tax", "order"."shipment" AS "order.shipment", "order"."expectedAt" AS "order.expectedAt", "order"."actualAt" AS "order.actualAt", "order"."createdAt" AS "order.createdAt", "order"."updatedAt" AS "order.updatedAt" FROM "Transactions" AS "Transactions" LEFT OUTER JOIN "Tickets" AS "ticket" ON "Transactions"."ticketId" = "ticket"."id" LEFT OUTER JOIN "Orders" AS "order" ON "Transactions"."orderId" = "order"."id" ORDER BY "Transactions"."id" DESC, "ticket->waresSold"."ticketId" DESC, "ticket->waresSold"."wareId" DESC;"},"sql":"SELECT "Transactions"."id", "Transactions"."ticketId", "Transactions"."orderId", "Transactions"."payment", "Transactions"."paymentType", "Transactions"."paidAt", "Transactions"."createdAt", "Transactions"."updatedAt", "ticket"."id" AS "ticket.id", "ticket"."clientId" AS "ticket.clientId", "ticket"."cost" AS "ticket.cost", "ticket"."paymentPlan" AS "ticket.paymentPlan", "ticket"."description" AS "ticket.description", "ticket"."createdAt" AS "ticket.createdAt", "ticket"."updatedAt" AS "ticket.updatedAt", (SELECT COALESCE(SUM("payment"), 0) FROM "Transactions" WHERE "ticketId" = "ticket"."id") AS "ticket.paid", (\n          SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" \n          ) AS "ticket.returned", ( SELECT\n            SUM("returned" * "ware"."unitPrice")\n          FROM\n            "WaresTickets"\n          LEFT OUTER JOIN \n            "Wares" AS "ware" ON "wareId" = "ware"."id" \n          WHERE \n            "ticketId" = "ticket"."id" ) AS "ticket.returned", "order"."id" AS "order.id", "order"."providerId" AS "order.providerId", "order"."cost" AS "order.cost", "order"."tax" AS "order.tax", "order"."shipment" AS "order.shipment", "order"."expectedAt" AS "order.expectedAt", "order"."actualAt" AS "order.actualAt", "order"."createdAt" AS "order.createdAt", "order"."updatedAt" AS "order.updatedAt" FROM "Transactions" AS "Transactions" LEFT OUTER JOIN "Tickets" AS "ticket" ON "Transactions"."ticketId" = "ticket"."id" LEFT OUTER JOIN "Orders" AS "order" ON "Transactions"."orderId" = "order"."id" ORDER BY "Transactions"."id" DESC, "ticket->waresSold"."ticketId" DESC, "ticket->waresSold"."wareId" DESC;"'

console.log(str.slice(1740))
